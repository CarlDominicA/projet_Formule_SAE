/*
Programme : TEST_AFF_PICASO.txt
Auteur :    Marc-Étienne Gendron-Fontaine
Date :      9 février 2024
Brief :        TEST_AFF_PICASO.txt est un programme d'exploration des capacités du logiciel "4D Workshop 4 IDE". En gros, ce programme
            affiche un thermomètre et une switch. Quand nous touchons la switch, le thermomètre affichera soit 100 C ou 10 C. La switch
            est activé en touchant l'écran tactile. Il y a un label qui affiche la dernière position en x connus.

Matérielle:    Écran uLCD-32PT, programmeur RS232 du cour de PCB
Encironement:    4D Workshop 4 IDE 4.9.0.7
Driver pour l'écran :    uLCD-32PT-I-GFX-R44.PmmC
*/


#platform "uLCD-32PT"
#inherit "4DGL_16bitColours.fnc"
#inherit "VisualConst.inc"
#inherit "NoName1Const.inc"


func main()

    // state :     État de l'écran tactile
    // x :         valeur en x de l'écran tactile
    // n :         Pour darder l'ID de la switch
    // DIPstate: État de la switch
    var state, x, n, DIPstate;


    /*
    Monte et vérifie si la carte uSD est bien montée. Si elle est montée correctement,
    on passe au reste du code. Sinon, entre dans une boucle while jusqu'à ce que la
    carte uSD soit montée.
    */
    putstr("Mounting...\n");
    if (!(file_Mount()))
        while(!(file_Mount()))
            putstr("Drive not mounted...");
            pause(200);
            gfx_Cls();
            pause(200);
        wend
    endif


    // Affiche "HELLO!!!!!" sur l'écran.
    print("HELLO!!!!!\n\r");

    // Charge les fichiers "NoName1.dat" et "NoName1.gci" qui contiennent les widgets.
    hndl := file_LoadImageControl("NoName1.dat", "NoName1.gci", 1);

    // Le sens de l'écran
    gfx_Set(SCREEN_MODE,LANDSCAPE) ;


    // Création du widget switch
    img_ClearAttributes(hndl, iDipswitch1, I_TOUCH_DISABLE);
    img_SetWord(hndl, iDipswitch1, IMAGE_INDEX, 0) ;

    // Affiche le widget switch sur l'écran
    img_Show(hndl,iDipswitch1) ;

    // Le label affiche "HELLO"
    img_Show(hndl,"HELLO") ;


    // Crée et affiche un thermomètre
    img_SetWord(hndl, iThermometer1, IMAGE_INDEX, 50) ;
    img_Show(hndl,iThermometer1) ;


    // Active l'écran tactile
    touch_Set(TOUCH_ENABLE);

    // Valeur initiale de la switch
    DIPstate := 0;


    // Équivalant d'un While
    repeat

    // Prends l'état de l'écran tactile
    state := touch_Get(TOUCH_STATUS);

    // Si on arrête de toucher l'écran tactile
    if(state == TOUCH_RELEASED)
        gfx_Cls();                        // Éfface l'écran
        x := touch_Get(TOUCH_GETX);        // Prends la dernière position en X
        print("X =  ");                    // Affiche la valeur de X
        print(x);
        img_Show(hndl,x) ;                // Le label affiche la valeur de X
        print("\r");
        n := img_Touched(hndl, iDipswitch1);    // Prends le "ID" de la switch si elle est touchée

        // Si le ID est celle de la switch
        if(n == iDipswitch1)

                /*     regarde l'état de la switch (0 ou 1). Change les valeurs de DIPstate
                    et du thermomètre (10 si DIPstate = 0, 100 sinon). Affiche le thermomètre
                     et la switch avec les nouvelles valeures.       */
                if(DIPstate == 0)
                    DIPstate := 1;
                    img_SetWord(hndl, iDipswitch1, IMAGE_INDEX, DIPstate);
                    img_SetWord(hndl, iThermometer1, IMAGE_INDEX, 10) ;
                    img_Show(hndl,iDipswitch1) ;
                    img_Show(hndl,iThermometer1) ;
                else
                    DIPstate := 0;
                    img_SetWord(hndl, iDipswitch1, IMAGE_INDEX, DIPstate);
                    img_SetWord(hndl, iThermometer1, IMAGE_INDEX, 100) ;
                    img_Show(hndl,iDipswitch1) ;
                    img_Show(hndl,iThermometer1) ;
                endif
        endif
    endif

    forever
endfunc

